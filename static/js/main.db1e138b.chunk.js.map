{"version":3,"sources":["recipes.js","App.js","index.js"],"names":["Recipe","props","className","title","calories","src","image","alt","ingredients","map","i","text","App","useState","recipes","setRecipe","search","setSearch","query","setQuery","ExReq","useEffect","getRecipes","a","fetch","res","json","data","hits","type","placeholder","onChange","e","target","value","onClick","preventDefault","console","log","recipe","label","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAiBeA,EAfA,SAACC,GACd,OACE,sBAAKC,UAAU,cAAf,UACE,6BAAKD,EAAME,QACX,6CAAgBF,EAAMG,YACtB,qBAAKC,IAAKJ,EAAMK,MAAOC,IAAI,KAC3B,6BACGN,EAAMO,YAAYC,KAAI,SAACC,GAAD,OACrB,6BAAKA,EAAEC,gBCkDFC,EAxDL,WACR,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGEC,EAAK,8DAA0DF,EAA1D,mBAFQ,WAER,oBADK,sCAGZG,qBAAU,WACRC,MACC,CAACJ,IAEJ,IAAMI,EAAU,uCAAG,8BAAAC,EAAA,sEACCC,MAAMJ,GADP,cACXK,EADW,gBAEEA,EAAIC,OAFN,OAEXC,EAFW,OAGjBZ,EAAUY,EAAKC,MAHE,2CAAH,qDAiBhB,OACE,sBAAK1B,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBACEA,UAAU,aACV2B,KAAK,OACLC,YAAY,6CACZC,SAnBa,SAACC,GACpBf,EAAUe,EAAEC,OAAOC,UAoBf,wBAAQhC,UAAU,YAAYiC,QAjBlB,SAACH,GACjBA,EAAEI,iBACa,KAAXpB,EACFqB,QAAQC,IAAI,MAEZnB,EAASH,IAYP,sBAIF,qBAAKd,UAAU,cAAf,SACGY,EAAQL,KAAI,SAAC8B,GAAD,OACX,cAAC,EAAD,CAEEpC,MAAOoC,EAAOA,OAAOC,MACrBpC,SAAUmC,EAAOA,OAAOnC,SACxBE,MAAOiC,EAAOA,OAAOjC,MACrBE,YAAa+B,EAAOA,OAAO/B,aAJtBiC,KAAKC,mBC5CtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.db1e138b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Recipe = (props) => {\r\n  return (\r\n    <div className=\"each-recipe\">\r\n      <h1>{props.title}</h1>\r\n      <p> Calories = {props.calories}</p>\r\n      <img src={props.image} alt=\"\" />\r\n      <ul>\r\n        {props.ingredients.map((i) => (\r\n          <li>{i.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { Component, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Recipe from \"./recipes\";\n\nlet App = () => {\n  const [recipes, setRecipe] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const App_ID = \"fd66710f\",\n    App_Key = \"b730ff582098b26929d3ced30bdb1a62\t\",\n    ExReq = `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${App_ID}&app_key=${App_Key}`;\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const res = await fetch(ExReq);\n    const data = await res.json();\n    setRecipe(data.hits);\n  };\n  const upDataSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    if (search === \"\") {\n      console.log(\"no\");\n    } else {\n      setQuery(search);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          placeholder=\"What is recipe you need to query for ? ...\"\n          onChange={upDataSearch}\n        />\n        <button className=\"searchBtn\" onClick={getSearch}>\n          Query\n        </button>\n      </div>\n      <div className=\"recipes-box\">\n        {recipes.map((recipe) => (\n          <Recipe\n            key={Math.random()}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}