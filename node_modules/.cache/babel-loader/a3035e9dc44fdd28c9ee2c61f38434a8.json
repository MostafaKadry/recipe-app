{"ast":null,"code":"var _jsxFileName = \"D:\\\\React with nour\\\\recipeapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Recipe from \"./recipes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet App = () => {\n  _s();\n\n  const [recipes, setRecipe] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const App_ID = \"fd66710f\",\n        App_Key = \"b730ff582098b26929d3ced30bdb1a62\t\",\n        ExReq = `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${App_ID}&app_key=${App_Key}`;\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const res = await fetch(ExReq);\n    const data = await res.json();\n    setRecipe(data.hits);\n  };\n\n  const upDataSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n\n    if (search === \"\") {\n      console.log(\"no\");\n    } else {\n      setQuery(search);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        placeholder: \"What is recipe you need to query for ? ...\",\n        onChange: upDataSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtn\",\n        onClick: getSearch,\n        children: \"Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(Recipe, {\n        title: recipe.recipe.label,\n        calories: recipe.recipe.calories,\n        image: recipe.recipe.image,\n        ingredients: recipe.recipe.ingredients\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Fc9nKN/rTpu9FF0ri5MWxUy7l5E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React with nour/recipeapp/src/App.js"],"names":["React","Component","useEffect","useState","Recipe","App","recipes","setRecipe","search","setSearch","query","setQuery","App_ID","App_Key","ExReq","getRecipes","res","fetch","data","json","hits","upDataSearch","e","target","value","getSearch","preventDefault","console","log","map","recipe","label","calories","image","ingredients","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,IAAIC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBJ,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,SAAD,CAAlC;AACA,QAAMS,MAAM,GAAG,UAAf;AAAA,QACEC,OAAO,GAAG,mCADZ;AAAA,QAEEC,KAAK,GAAI,uDAAsDJ,KAAM,WAAUE,MAAO,YAAWC,OAAQ,EAF3G;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACL,KAAD,CAFM,CAAT;;AAIA,QAAMK,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,KAAD,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAZ,IAAAA,SAAS,CAACW,IAAI,CAACE,IAAN,CAAT;AACD,GAJD;;AAKA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1Bb,IAAAA,SAAS,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAIH,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIlB,MAAM,KAAK,EAAf,EAAmB;AACjBmB,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAFD,MAEO;AACLjB,MAAAA,QAAQ,CAACH,MAAD,CAAR;AACD;AACF,GAPD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,4CAHd;AAIE,QAAA,QAAQ,EAAEa;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEI,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,gBACGnB,OAAO,CAACuB,GAAR,CAAaC,MAAD,iBACX,QAAC,MAAD;AAEE,QAAA,KAAK,EAAEA,MAAM,CAACA,MAAP,CAAcC,KAFvB;AAGE,QAAA,QAAQ,EAAED,MAAM,CAACA,MAAP,CAAcE,QAH1B;AAIE,QAAA,KAAK,EAAEF,MAAM,CAACA,MAAP,CAAcG,KAJvB;AAKE,QAAA,WAAW,EAAEH,MAAM,CAACA,MAAP,CAAcI;AAL7B,SACOC,IAAI,CAACC,MAAL,EADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvDD;;GAAI/B,G;;KAAAA,G;AAwDJ,eAAeA,GAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Recipe from \"./recipes\";\n\nlet App = () => {\n  const [recipes, setRecipe] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const App_ID = \"fd66710f\",\n    App_Key = \"b730ff582098b26929d3ced30bdb1a62\t\",\n    ExReq = `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${App_ID}&app_key=${App_Key}`;\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const res = await fetch(ExReq);\n    const data = await res.json();\n    setRecipe(data.hits);\n  };\n  const upDataSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    if (search === \"\") {\n      console.log(\"no\");\n    } else {\n      setQuery(search);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          placeholder=\"What is recipe you need to query for ? ...\"\n          onChange={upDataSearch}\n        />\n        <button className=\"searchBtn\" onClick={getSearch}>\n          Query\n        </button>\n      </div>\n      <div>\n        {recipes.map((recipe) => (\n          <Recipe\n            key={Math.random()}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}